{"version":3,"sources":["sw.js"],"names":["VERSION","self","addEventListener","event","waitUntil","precache","request","method","respondWith","cacheResponse","updateCache","caches","open","cache","addAll","match","response","fetch","put"],"mappings":";;;;AAAA,IAAMA,OAAO,GAAG,IAAhB;AAGAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,UAAAC,KAAK,EAAG;AACrCA,EAAAA,KAAK,CAACC,SAAN,CAAgBC,QAAQ,EAAxB;AACH,CAFD;AAKAJ,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAAAC,KAAK,EAAG;AACnC,MAAMG,OAAO,GAAGH,KAAK,CAACG,OAAtB,CADmC,CAEnC;;AAEA,MAAIA,OAAO,CAACC,MAAR,KAAmB,KAAvB,EAA6B;AACzB;AACH,GANkC,CAQnC;;;AACAJ,EAAAA,KAAK,CAACK,WAAN,CAAkBC,aAAa,CAACH,OAAD,CAA/B,EATmC,CAYnC;;AACAH,EAAAA,KAAK,CAACC,SAAN,CAAgBM,WAAW,CAACJ,OAAD,CAA3B;AACH,CAdD;;SAgBeD;;;;;sEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBM,MAAM,CAACC,IAAP,CAAYZ,OAAZ,CADxB;;AAAA;AACUa,YAAAA,KADV;AAAA,6CAEWA,KAAK,CAACC,MAAN,CAAa,CACd,GADc,EAEd,aAFc,EAGd,kBAHc,EAId,wBAJc,EAKd,6BALc,EAMd,8BANc,EAOd,mBAPc,EAQd,0BARc,CAAb,CAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SAeeL;;;;;2EAAf,kBAA6BH,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBK,MAAM,CAACC,IAAP,CAAYZ,OAAZ,CADxB;;AAAA;AACUa,YAAAA,KADV;AAAA;AAAA,mBAE2BA,KAAK,CAACE,KAAN,CAAYT,OAAZ,CAF3B;;AAAA;AAEUU,YAAAA,QAFV;AAAA,8CAIWA,QAAQ,IAAIC,KAAK,CAACX,OAAD,CAJ5B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SAQeI;;;;;yEAAf,kBAA2BJ,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBK,MAAM,CAACC,IAAP,CAAYZ,OAAZ,CADxB;;AAAA;AACUa,YAAAA,KADV;AAAA;AAAA,mBAE2BI,KAAK,CAACX,OAAD,CAFhC;;AAAA;AAEUU,YAAAA,QAFV;AAAA,8CAGWH,KAAK,CAACK,GAAN,CAAUZ,OAAV,EAAmBU,QAAnB,CAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"sw.js","sourceRoot":"..","sourcesContent":["const VERSION = \"v1\";\n\n\nself.addEventListener('install', event =>{\n    event.waitUntil(precache());\n})\n\n\nself.addEventListener('fetch', event =>{\n    const request = event.request;\n    // solo las peticiones get\n\n    if (request.method !== \"GET\"){\n        return;\n    }\n\n    // buscar en cache si tenemos la peticion.\n    event.respondWith(cacheResponse(request));\n\n\n    // actualizar el cache\n    event.waitUntil(updateCache(request));\n})\n\nasync function precache(){\n    const cache = await caches.open(VERSION)\n    return cache.addAll([\n          '/',\n          '/index.html',\n          '/assets/index.js',\n          '/assets/MediaPlayer.js',\n          '/assets/plugins/AutoPlay.js',\n          '/assets/plugins/AutoPause.js',\n          '/assets/index.css',\n          '/assets/BigBuckBunny.mp4',\n    ]);\n}\n\n\nasync function cacheResponse(request){\n    const cache = await caches.open(VERSION);\n    const response = await cache.match(request);\n    // caso en el que no este en el cache tenemos que regresar el fetch de la request.\n    return response || fetch(request);\n}\n\n\nasync function updateCache(request){\n    const cache = await caches.open(VERSION);\n    const response = await fetch(request);\n    return cache.put(request, response);\n}"]}